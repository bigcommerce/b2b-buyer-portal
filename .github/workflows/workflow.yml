name: sf CI
on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: base64 -d <<<${{ secrets.STAGING_ENV }} > apps/storefront/.env.staging
      - run: yarn
      - run: yarn build:staging
      - run: echo "GITHUB_SHA_SHORT=$(echo $GITHUB_SHA | cut -c 1-6)" >> $GITHUB_ENV
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: deploy to s3
        run: |
          aws s3 cp apps/storefront/dist s3://b3-cdn-files/b2b/staging/storefront --recursive --acl public-read
          aws cloudfront create-invalidation --distribution-id E1ZCC8QPXD9I6K --path "/*"
      - name: create revision
        run: |
          poly_js=$(find apps/storefront/dist -name polyfills-legacy.*.js -type f -printf '%f')
          index_js=$(find apps/storefront/dist -name index-legacy.*.js ! -path "apps/storefront/dist/assets/*" -type f -printf '%f')
          curl --location --request POST '${{ secrets.API_HOST }}/api/v3/stores/revisions' \
          --header 'Authorization: Basic ${{ secrets.API_CREDENTIAL }}' \
          --header 'Content-Type: application/json' \
          --data-binary @- << EOF
          {
            "jsFiles": [
              "https://cdn.bundleb2b.net/b2b/staging/storefront/${poly_js}",
              "https://cdn.bundleb2b.net/b2b/staging/storefront/${index_js}"
            ],
            "revisionTitle": "${GITHUB_SHA_SHORT}"
          }
          EOF
        shell: bash
      - name: start deploy
        run: |
          curl --location --request POST '${{ secrets.API_HOST }}/api/v3/stores/deployments' \
          --header 'Authorization: Basic ${{ secrets.API_CREDENTIAL }}' \
          --header 'Content-Type: application/json' \
          --data-binary @- << EOF
          {
            "deploy_all": true,
            "revision": "${GITHUB_SHA_SHORT}"
          }
          EOF
        shell: bash

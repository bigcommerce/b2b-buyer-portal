diff --git a/node_modules/@mui/material/TablePagination/TablePagination.d.ts b/node_modules/@mui/material/TablePagination/TablePagination.d.ts
index eddd787..b44d025 100644
--- a/node_modules/@mui/material/TablePagination/TablePagination.d.ts
+++ b/node_modules/@mui/material/TablePagination/TablePagination.d.ts
@@ -13,6 +13,7 @@ export interface LabelDisplayedRowsArgs {
   to: number;
   count: number;
   page: number;
+  of?: string;
 }
 
 /**
@@ -154,6 +155,7 @@ export interface TablePaginationOwnProps extends TablePaginationBaseProps {
    * The system prop that allows defining system overrides as well as additional CSS styles.
    */
   sx?: SxProps<Theme>;
+  of?: string;
 }
 
 export interface TablePaginationTypeMap<AdditionalProps, RootComponent extends React.ElementType> {
diff --git a/node_modules/@mui/material/TablePagination/TablePagination.js b/node_modules/@mui/material/TablePagination/TablePagination.js
index a57a7f5..adecbb4 100644
--- a/node_modules/@mui/material/TablePagination/TablePagination.js
+++ b/node_modules/@mui/material/TablePagination/TablePagination.js
@@ -115,9 +115,10 @@ const TablePaginationDisplayedRows = styled('p', {
 function defaultLabelDisplayedRows({
   from,
   to,
-  count
+  count,
+  of = 'of'
 }) {
-  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;
+  return `${from}–${to} ${of} ${count !== -1 ? count : `more than ${to}`}`;
 }
 function defaultGetAriaLabel(type) {
   return `Go to ${type} page`;
@@ -171,7 +172,8 @@ const TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(i
       showFirstButton = false,
       showLastButton = false,
       slotProps = {},
-      slots = {}
+      slots = {},
+      of
     } = props,
     other = _objectWithoutPropertiesLoose(props, _excluded);
   const ownerState = props;
@@ -236,7 +238,8 @@ const TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(i
           from: count === 0 ? 0 : page * rowsPerPage + 1,
           to: getLabelDisplayedRowsTo(),
           count: count === -1 ? -1 : count,
-          page
+          page,
+          of
         })
       }), /*#__PURE__*/_jsx(ActionsComponent, {
         className: classes.actions,
@@ -338,6 +341,7 @@ process.env.NODE_ENV !== "production" ? TablePagination.propTypes /* remove-prop
    * @deprecated Use `slotProps.actions.nextButton` instead.
    */
   nextIconButtonProps: PropTypes.object,
+  of: PropTypes.string,
   /**
    * Callback fired when the page is changed.
    *
